// Script de test pour v√©rifier l'envoi d'email
require('dotenv').config({ path: './.env' });
const nodemailer = require('nodemailer');

console.log('üöÄ Test d\'envoi d\'email...');
console.log('üìß SMTP_HOST:', process.env.SMTP_HOST);
console.log('üìß SMTP_USER:', process.env.SMTP_USER);
console.log('üìß FROM_EMAIL:', process.env.FROM_EMAIL);

(async () => {
  const transporter = nodemailer.createTransport({
    host: process.env.SMTP_HOST,
    port: Number(process.env.SMTP_PORT || 587),
    secure: process.env.SMTP_PORT === '465', // true for 465, false for 587
    auth: {
      user: process.env.SMTP_USER,
      pass: process.env.SMTP_PASSWORD,
    },
  });

  try {
    console.log('‚è≥ Envoi en cours...');
    
    const info = await transporter.sendMail({
      from: `${process.env.FROM_NAME} <${process.env.FROM_EMAIL}>`,
      to: process.env.SMTP_USER, // Tu re√ßois l'email toi-m√™me
      subject: '‚úÖ Test SMTP - ERZA E-Commerce',
      text: 'F√©licitations ! L\'envoi d\'email fonctionne parfaitement.',
      html: `
        <h2>‚úÖ Test SMTP R√©ussi !</h2>
        <p>F√©licitations ! L'envoi d'email depuis ton serveur ERZA fonctionne parfaitement.</p>
        <p><strong>Configuration utilis√©e :</strong></p>
        <ul>
          <li>Host: ${process.env.SMTP_HOST}</li>
          <li>Port: ${process.env.SMTP_PORT}</li>
          <li>User: ${process.env.SMTP_USER}</li>
          <li>From: ${process.env.FROM_EMAIL}</li>
        </ul>
        <p>Tu peux maintenant envoyer des emails de v√©rification √† tes utilisateurs ! üéâ</p>
      `,
    });
    
    console.log('‚úÖ SUCCESS ! Email envoy√© avec succ√®s');
    console.log('üì¨ Message ID:', info.messageId);
    console.log('üì® V√©rifie ta bo√Æte mail:', process.env.SMTP_USER);
    
  } catch (err) {
    console.error('‚ùå ERREUR lors de l\'envoi :');
    console.error(err.message);
    
    // Messages d'aide selon l'erreur
    if (err.message.includes('Invalid login') || err.message.includes('Authentication failed')) {
      console.log('\nüí° SOLUTION: V√©rifie que :');
      console.log('   - Le mot de passe d\'application est correct');
      console.log('   - La validation en 2 √©tapes est activ√©e sur ton compte Google');
    }
    
    if (err.message.includes('self signed certificate')) {
      console.log('\nüí° SOLUTION: Probl√®me TLS, ajoute tls: { rejectUnauthorized: false } pour debug');
    }
  } finally {
    process.exit(0);
  }
})();